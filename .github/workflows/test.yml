name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.5', '3.6', '3.7', '3.8', '3.9', '3.9-dev']
        geos-version: ['3.5.2', '3.6.4', '3.7.3', '3.8.1', '3.8.1', 'main']
        numpy-version: ['1.10.4', '1.13.3', '1.15.4', '1.17.5', '1.19.4', '']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache GEOS
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/geosinstall
          key: ${{ runner.os }}-geos-${{ matrix.geos-version }}
          restore-keys: |
            ${{ runner.os }}-geos-
      - name: Install GEOS
        run: |
          export GEOS_INSTALL=${{ github.workspace }}/geosinstall/geos-${{ matrix.geos-version }}
          ./ci/install_geos.sh
          export LD_LIBRARY_PATH=$GEOS_INSTALL/lib
          export PATH=$GEOS_INSTALL/bin:$PATH
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel
          if [ "${{ matrix.geos-version }}" = "main" ]; then
            python -m pip install --upgrade --pre Cython numpy pytest;
          else
            python -m pip install --upgrade Cython "numpy==${{ matrix.numpy-version }}" pytest;
          fi
      - name: Build
        run: |
          python setup.py build_ext --inplace
          python -m pip install --no-deps -e .
      - name: Run tests
        run: pytest --doctest-modules
